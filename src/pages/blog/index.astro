---
import { getCollection } from 'astro:content';
import readingTime from 'reading-time';

import BaseLayout from '~/layouts/BaseLayout.astro';
import { formatDate } from '~/lib/utils';

const postsEntries = await getCollection('posts', ({ data }) => {
    return !data.draft && !data.isArchived;
});
const posts = postsEntries.sort(
    (a, b) => b.data.publishedAt.getTime() - a.data.publishedAt.getTime()
);
---

<BaseLayout title="Blog | Sergio Barria">
    <h1 class="mb-6 text-2xl font-bold md:text-3xl">Blog</h1>
    <p class="mb-8">
        In total, I&apos;ve written {posts.length} articles. You can find them all below.
    </p>
    <ul>
        {
            posts.map(({ data, slug, body }) => (
                <li class="mb-4">
                    <a id="post-link" href={`/blog/${slug}`}>
                        <div class="flex items-start justify-between gap-1">
                            <h1 transition:name={data.title} class="max-w-[80%]">
                                {data.title}
                            </h1>
                            <p class="flex items-center gap-1 text-xs text-neutral-400">
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    width="24"
                                    height="24"
                                    viewBox="0 0 24 24"
                                    fill="none"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    class="lucide lucide-eye h-3 w-3"
                                >
                                    <>
                                        <path d="M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z" />
                                        <circle cx="12" cy="12" r="3" />
                                    </>
                                </svg>
                                <span
                                    x-data={`{ 
                                    views: 0, 
                                    async getViews() { this.views = await (await fetch('/api/views/${slug}.json')).json(); }
                                }`}
                                    x-init=" getViews() "
                                    x-text="views"
                                />
                            </p>
                        </div>
                        <p class="space-x-1 text-sm text-neutral-400">
                            <span transition:name={'date:' + formatDate(data.publishedAt)}>
                                {formatDate(data.publishedAt)}
                            </span>
                            <span>â€¢</span>
                            <span>{readingTime(body).text}</span>
                        </p>
                    </a>
                </li>
            ))
        }
    </ul>
    <hr class="my-8 border-neutral-500/50" />
</BaseLayout>
